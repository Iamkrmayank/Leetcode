3012. Minimize Length of Array Using Operations

You are given a 0-indexed integer array nums containing positive integers.
Your task is to minimize the length of nums by performing the following operations any number of times (including zero):
Select two distinct indices i and j from nums, such that nums[i] > 0 and nums[j] > 0.
Insert the result of nums[i] % nums[j] at the end of nums.
Delete the elements at indices i and j from nums.
Return an integer denoting the minimum length of nums after performing the operation any number of times.

Example 1:
Input: nums = [1,4,3,1]
Output: 1

Example 2:
Input: nums = [5,5,5,10,5]
Output: 2

Example 3:
Input: nums = [2,3,4]
Output: 1

Solution:
class Solution {
public:
    int minimumArrayLength(vector<int>& nums) {
        int n = nums.size();
        if(n==1)
        {
            return 1;
        }
        sort(nums.begin(),nums.end());
        int mini = nums[0] , c = 0;
        for(int i=0;i<n;i++)
        {
            if(mini ==nums[i])
            {
                c++;
            }
            else{
                if((nums[i] % mini)!=0)
                {
                    return 1;
                }
            }
        }
        return (c+1)/2;
    }
};
