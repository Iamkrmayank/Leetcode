872. Leaf-Similar Trees

Consider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence.
For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).
Two binary trees are considered leaf-similar if their leaf value sequence is the same.
Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.

Examples 1:
Input: root1 = [3,5,1,6,2,9,8,null,null,7,4]
root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]
Output: true

Example 2:
Input: root1 = [1,2,3], root2 = [1,3,2]
Output: false

Solution:

class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> list1,list2;
        getnodes(root1,list1);
        getnodes(root2,list2);

        if(list1.size()!=list2.size())
        {
            return false;
        }
        return list1==list2;
    }
    void getnodes(TreeNode* root,vector<int>& list)
    {
        if(root==NULL)
        {
            return ;
        }
        if(!root->left && !root->right)
        {
            list.push_back(root->val);
        }
        getnodes(root->left,list);
        getnodes(root->right,list);
    }
};
