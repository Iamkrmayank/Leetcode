965. Univalued Binary Tree

A binary tree is uni-valued if every node in the tree has the same value.
Given the root of a binary tree, return true if the given tree is uni-valued, or false otherwise.

Example 1:
Input: root = [1,1,1,1,1,null,1]
Output: true

Example 2:
Input: root = [2,2,2,5,2]
Output: false

Solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool check(TreeNode* root,int x)
    {
        if(root==NULL)
        {
            return true;
        }
        if(root->val!=x)
        {
            return false;
        }
        return check(root->left,x) && check(root->right,x);
    }
    bool isUnivalTree(TreeNode* root) {
        if(root==NULL)
        {
            return true;
        }
        int x = root->val;
        bool ans = check(root,x);
        return ans;
    }
};
